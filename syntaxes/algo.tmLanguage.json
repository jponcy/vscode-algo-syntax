{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Algorithm",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#keywords" },
		{ "include": "#strings" },
		{ "include": "#arithmetic_operators" },
		{ "include": "#specials" },
		{ "include": "#caracters" },
		{ "include": "#constant_numbers" },
		{ "include": "#function_call" },
		{ "include": "#question"},
		{ "include": "#function_name" }
	],
	"repository": {
		"question": {
			"begin": "",
			"end": "",
			"patterns": [{
				"name": "markup.heading",
				"match": "^(\\d+\\)\\s+\\w+|\\w|[*#-]).*"
			}]
		},
		"function_name": {
			"begin": "",
			"end": "",
			"beginCaptures": {
				"2": { "name": "entity.name.class" }
			},
			"patterns": [{
				"name": "entity.name.class",
				"match": "(ALGORITHME?|FONCTION)\\s+(\\w+)"
			}]
		},
		"function_call": {
			"begin": "",
			"end": "",
			"patterns": [{
				"name": "emphasis",
				"match": "([\\w_-]+)",
				"begin": "\\b",
				"end": "\\(",
				"endCaptures": {
					"0": { "name": "punctuation.paren.open" }
				}
			}]
		},
		"comments": {
			"begin": "",
			"end": "",
			"patterns": [{
				"name": "comment.line.algo",
				"match": "(//\\s*.+|/\\*[.\\s\\S\\r\\n]+\\*/)"
			}]
		},
		"keywords": {
			"begin": "",
			"end": "",
			"patterns": [{
				"name": "keyword.control.algo",
				"match": "\\b(ALGORITHME?|DEBUT|FIN.*|VARIABLE|CONSTANTE|FONCTION|SI|POUR|TANTQUE|FAIRE|PAS DE|\\s+DE\\s+|ALORS|SINON|ET|OU|SELON|Retourne)\\b"
			}]
		},
		"arithmetic_operators": {
			"begin": "",
			"end": "",
			"patterns": [{
				"name": "keyword.operator",
				"match": "\\b([+-/*=]|<-)\\b"
			}]
		},
		"specials": {
			"begin": "",
			"end": "",
			"patterns": [{
				"name": "constant.character",
				"match": "\\b(VRAI|FAUX|NULL)\\b"
			}]
		},
		"constant_numbers": {
			"begin": "",
			"end": "",
			"patterns": [{
				"name": "constant.numeric",
				"match": "\\s+\\d+\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.algo",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape",
				"match": "\".*\""
			}]
		},
		"caracters": {
			"name": "string.quoted.single",
			"begin": "'",
			"end": "'",
			"patterns": [{
				"name": "constant.character",
				"match": "'\\w'"
			}]
		}
	},
	"scopeName": "source.algo"
}
